package operators_and_assignments;

public class Main {
	public static void main(String[] args)
	{
//		1.Increment/Decrement=>
//		type of increment:> 
//		 1. Pre increment Exp=> int x =++y;
//		 2. Post increment Exp=> int x=y++;
		
//		Type of Decrement=>
//		1.Pre decrement Exp=>  int x =--y;
//		2.Post decrement Exp=> int u=y--;
		
//		Exp=>
//		double d=10.5;
//		d++;
//		System.out.println(d); output=11.5
		
//		char c='a';
//		c++;
//		System.out.println(c); output=b
		
//		boolean b=true;
//		b++;
//		System.out.println(b); C.E type mismatch
		
//		int x=10;
//		x++;
//		System.out.println(x); output=11
		
		
//		2.Arithmetic operators=>(+,-,*,/,%)
		
//		byte a=10;
//		byte b=20;
//		int c=a+b;
//		System.out.println(c); output=30;
		
		
//		System.out.println(0/0.0);output=NaN
		
		
//		3.String Concatination Operator(+)
//		int a=10,b=20,c=30;
//		String d="java";
//		System.out.println(a+b+c+d); output=60java
//		System.out.println(a+b+d+c); output=30java30
//		System.out.println(d+a+b+c); output=java102030
//		System.out.println(a+d+b+c); output=10java2030
				
		
//		4. Relational Operators(>,<,>=,<=)
//		System.out.println(10>20);        false
//		System.out.println(50>20);        true
//		System.out.println(10>=10.0);     true
//		System.out.println('a'<125);      true
		
		
//		5. Equality Operators (==,!=)
//		System.out.println(10==10.0);      true
//		System.out.println('a'==97);       true
//		System.out.println(true==false);   false
//		System.out.println(10.5==12.3);    false
		
//		Exp=>
//		class A extends Thread
//		{
//		    public void run()
//		    {
//		        System.out.println("java is programing language");
//		    }
//		}
//		public class Main 
//		{
//		    public static void main(String[] args)
//		    {
//		        A t1=new A();
//		        A t2=new A();
//		        System.out.println(t1 == t2);
//		        A t3=t1;
//		        System.out.println(t1==t3);
//		    }
//		}
		
//		6. Instanceof Operator=> This is use to check the object is related of that class or interface or not
		
//		Exp=>
//		class A extends Thread
//		{
//		    public void run()
//		    {
//		        System.out.println("java is programing language");
//		    }
//		}
//		public class Main 
//		{
//		    public static void main(String[] args)
//		    {
//		        A t1=new A();
//		        System.out.println(t1 instanceof Thread);       True
//		        System.out.println(t1 instanceof Runnable);     True
//		        System.out.println(t1 instanceof Object);       True
//		    }
//		}
		
//		7. Bitwise operator=>
//		System.out.println(4&5); output=4
//		System.out.println(4|5); output=5
//		System.out.println(4^5); output=1
		System.out.println(~5);
		
	}
}
