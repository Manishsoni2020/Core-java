//package multithreading;
//
//
//public class Synchronize_block
//{
//	public static void main(String[] args) {
//
//}
//}
//
package multithreading;

class ThreadB extends Thread {
    int total = 0;

    public void run() {
        synchronized (this) {
            System.out.println("Child thread start notifications");
            for (int i = 1; i <= 10; i++) {
                total += i;
            }
            System.out.println("Child thread try to give notifications");
            this.notify();  // Notify main thread
        }
    }
}

public class Synchronize_block {
    public static void main(String[] args) throws InterruptedException {
        ThreadB tb = new ThreadB();
        tb.start();  // âœ… This will call the run() method in ThreadB

        synchronized (tb) {
            System.out.println("Main thread trying to call wait()");
            tb.wait();  // ðŸ’¤ Main thread waits for notification
            System.out.println("Main thread got notification");
            System.out.println("Total sum is: " + tb.total);
        }
    }
}
